ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type)) + xlim(0, 10)
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type)) + xlim(0, 10) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration")
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type)) + xlim(0, 10) + + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration")
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type)) + xlim(0, 10) + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration")
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type)) + xlim(1, 10) + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration")
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type)) + xlim(1, 10) + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration") + scale_x_discrete(breaks=10)
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type)) + xlim(1, 10) + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration") + scale_x_discrete(breaks=9)
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type)) + xlim(1, 10) + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration") + scale_x_discrete()
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type)) + xlim(1, 10) + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration")
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type, size=1.6)) + xlim(1, 10) + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration") + scale_x_continuous(breaks=seq(0, 11))
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type, size=1)) + xlim(1, 10) + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration") + scale_x_continuous(breaks=seq(0, 11))
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type, size=0.5)) + xlim(1, 10) + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration") + scale_x_continuous(breaks=seq(0, 11))
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type)) + xlim(1, 10) + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration") + scale_x_continuous(breaks=seq(0, 11))
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type, size=0.1)) + xlim(1, 10) + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration") + scale_x_continuous(breaks=seq(0, 11))
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=0.1) + xlim(1, 10) + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration") + scale_x_continuous(breaks=seq(0, 11))
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=0.3) + xlim(1, 10) + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration") + scale_x_continuous(breaks=seq(0, 11))
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=1) + xlim(1, 10) + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration") + scale_x_continuous(breaks=seq(0, 11))
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=2) + xlim(1, 10) + ylim(0, 1.5) + xlab("Iteration") + ylab("Transmit Power (mW)") + ggtitle("Transmit power per Iteration") + scale_x_continuous(breaks=seq(0, 11))
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=2)
+ xlim(1, 10) + ylim(0, 1.5)
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=2)
+ xlim(1, 10) + ylim(0, 1.5)
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=2) +
xlim(1, 10) + ylim(0, 1.5) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, 11)) +
scale_fill_discrete(name="Transmitter Number", breaks = c("T1", "T2", "T3"), labels=c("1", "2", "3"))
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=2) +
xlim(1, 10) + ylim(0, 1.5) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, 11)) +
scale_fill_manual(name="Transmitter Number", breaks = c("T1", "T2", "T3"), labels=c("1", "2", "3"))
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=1.5) +
xlim(1, 10) + ylim(0, 1.5) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_fill_manual(name="Transmitter Number", breaks = c("T1", "T2", "T3"), labels=c("1", "2", "3"))
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=1.5) +
xlim(1, 10) + ylim(0, 1.5) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_color_discrete(name="Transmitter Number", breaks = c("T1", "T2", "T3"), labels=c("1", "2", "3"))
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=1.5) +
xlim(1, 10) + ylim(0, 1.5) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter Number", breaks = c("T1", "T2", "T3"), labels=c("1", "2", "3"))
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=1.5) +
xlim(1, 10) + ylim(0, 1.5) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter Number", breaks = c("T1", "T2", "T3"), labels=c("1", "2", "3")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=1.5) +
xlim(1, 10) + ylim(0, 1.5) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter Number", breaks = c("T1", "T2", "T3"), labels=c("1", "2", "3")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
panel.border = element_line())
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=1.5) +
xlim(1, 10) + ylim(0, 1.5) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter Number", breaks = c("T1", "T2", "T3"), labels=c("1", "2", "3")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
axis.line = element_line())
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=1.5) +
xlim(1, 10) + ylim(-0.25, 1.5) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(-1, num_iter+1)) +
scale_color_discrete(name="Transmitter Number", breaks = c("T1", "T2", "T3"), labels=c("1", "2", "3")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
axis.line = element_line())
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=1.5) +
xlim(1, 10) + ylim(0, 1.5) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter Number", breaks = c("T1", "T2", "T3"), labels=c("1", "2", "3")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
ggplot(q1ab) + geom_line(aes(x = iteration, y= value, color= type), size=1.5) +
xlim(1, 10) + ylim(0, 1.5) +
xlab("Iteration") + ylab("SIR") +
ggtitle("SIR per Iterations for each Transmitter") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="SIR For Trans ID #", breaks = c("SIR1", "SIR2", "SIR3"), labels=c("1", "2", "3")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
q1ab
ggplot(q1ab) + geom_line(aes(x = iteration, y= value, color= type), size=1.5) +
xlim(1, 10) + ylim(0.75, 1.25) +
xlab("Iteration") + ylab("SIR") +
ggtitle("SIR per Iterations for each Transmitter") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter ID", breaks = c("SIR1", "SIR2", "SIR3"), labels=c("1", "2", "3")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
q1ab
ggplot(q1ab) + geom_line(aes(x = iteration, y = value, color = type), size=1.5) +
xlim(1, 10) + ylim(0.75, 1.25) +
xlab("Iteration") + ylab("SIR") +
ggtitle("SIR per Iterations for each Transmitter") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter ID", breaks = c("SIR1", "SIR2", "SIR3"), labels=c("1", "2", "3")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
ggplot(q1ab) + geom_point(aes(x = iteration, y= value))
ggplot(q1ab) + geom_point(aes(x = iteration, y= value, color = type))
ggplot(q1ab) + geom_line(aes(x = iteration, y= value, color = type))
q1ab
ggplot(q1ab) + geom_line(aes(x = iteration, y= value, color = type)) + scale_x_continuous(breaks=seq(0, num_iter+1))
ggplot(q1ab) + geom_line(aes(x = iteration, y= value, color = type)) + scale_x_continuous(breaks=seq(0, num_iter+1)) + scale_color_discrete(name="Transmitter ID", breaks = c("SIR1", "SIR2", "SIR3"), labels=c("1", "2", "3"))
ggplot(q1ab) + geom_line(aes(x = iteration, y= value, color = type)) + scale_x_continuous(breaks=seq(0, num_iter+1)) + scale_color_discrete(name="Transmitter ID", breaks = c("SIR1", "SIR2", "SIR3"), labels=c("1", "2", "3")) + theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
ggplot(q1ab) + geom_line(aes(x = iteration, y= value, color = type)) + scale_x_continuous(breaks=seq(0, num_iter+1)) + scale_color_discrete(name="Transmitter ID", breaks = c("SIR1", "SIR2", "SIR3"), labels=c("1", "2", "3")) + theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold")) + ggtitle("SIR per Iterations for each Transmitter")
ggplot(q1ab) + geom_line(aes(x = iteration, y= value, color = type)) +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter ID", breaks = c("SIR1", "SIR2", "SIR3"), labels=c("1", "2", "3")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold")) +
ggtitle("SIR per Iterations for each Transmitter")
ggplot(q1ab) + geom_line(aes(x = iteration, y= value, color = type)) +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter ID", breaks = c("SIR1", "SIR2", "SIR3"), labels=c("1", "2", "3")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold")) +
ggtitle("SIR per Iterations for each Transmitter")
ggplot(q1ab) + geom_line(aes(x = iteration, y= value, color = type), size = 1.5) +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
xlab("Iteration") + ylab("SIR Value") +
scale_color_discrete(name="Transmitter ID", breaks = c("SIR1", "SIR2", "SIR3"), labels=c("1", "2", "3")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold")) +
ggtitle("SIR per Iterations for each Transmitter")
ggplot(q1aa) + geom_line(aes(x = iteration, y= value, color= type), size=1) +
xlim(1, 10) + ylim(0, 1.5) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter ID", breaks = c("T1", "T2", "T3"), labels=c("1", "2", "3")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
ggplot(q1ab) + geom_line(aes(x = iteration, y= value, color = type), size = 1) +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
xlab("Iteration") + ylab("SIR Value") +
scale_color_discrete(name="Transmitter ID", breaks = c("SIR1", "SIR2", "SIR3"), labels=c("1", "2", "3")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold")) +
ggtitle("SIR per Iterations for each Transmitter")
q1
q1a
gamma = c(gamma, 1)
gamam
gamma()
gamma
gamma(1)
gamma(12)
G = matrix()
edit(G)
G
G = matrix(c(1, 0.1, 0.3, 0.1, 0.2, 1, 0.3, 0.1, 0.2, 0.2, 1, 0.1, 0.1, 0.1, 0.1, 1), nrow = 4, byrow = T)
G
p
num_iter = 10
q1b = data.frame(T1 = numeric(num_iter),
T2 = numeric(num_iter),
T3 = numeric(num_iter),
T4 = numeric(num_iter),
SIR1 = numeric(num_iter),
SIR2 = numeric(num_iter),
SIR3 = numeric(num_iter),
SIR4 = numeric(num_iter),
iteration=1:num_iter)
for (i in 1:num_iter) {
if(i == 1) {
p2 = c(p, 0.1)
} else {
p2 = gamma / SIR * p2
}
SIR = ((diag(4) * G) %*% p2) / (((diag(4) - 1) * G) %*% p2 + noise)
q1b[i, 1:4] = p2
q1b[i, 5:8] = SIR
}
p2
q1b
p
gamma
p2
q1ba = melt(q1b[c('T1', 'T2', 'T3', 'T4', 'iteration')], id=c("iteration"), variable.name = "type")
q1bb = melt(q1b[c('SIR1', 'SIR2', 'SIR3', 'SIR4', 'iteration')], id=c("iteration"), variable.name = "type")
q1ba = melt(q1b[c('T1', 'T2', 'T3', 'T4', 'iteration')], id=c("iteration"), variable.name = "type")
q1bb = melt(q1b[c('SIR1', 'SIR2', 'SIR3', 'SIR4', 'iteration')], id=c("iteration"), variable.name = "type")
ggplot(q1ab) + geom_line(aes(x = iteration, y= value, color= type), size=1) +
xlim(1, 10) + ylim(0, 1.5) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter ID", breaks = c("T1", "T2", "T3", "T4"), labels=c("1", "2", "3", "4")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
ggplot(q1ab) + geom_line(aes(x = iteration, y= value, color= type), size=1) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter ID", breaks = c("T1", "T2", "T3", "T4"), labels=c("1", "2", "3", "4")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
ggplot(q1ab) + geom_line(aes(x = iteration, y= value, color= type), size=1) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter ID", breaks = c("T1", "T2", "T3", "T4"), labels=c("1", "2", "3", "4")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
ggplot(q1bb) + geom_line(aes(x = iteration, y= value, color= type), size=1) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter ID", breaks = c("T1", "T2", "T3", "T4"), labels=c("1", "2", "3", "4")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
ggplot(q1bb) + geom_line(aes(x = iteration, y= value, color= type), size=1) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter ID", breaks = c("T1", "T2", "T3", "T4"), labels=c("1", "2", "3", "4")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
ggplot(q1bb) + geom_line(aes(x = iteration, y= value, color= type), size=1) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1))
ggplot(q1ba) + geom_line(aes(x = iteration, y= value, color= type), size=1) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter ID", breaks = c("T1", "T2", "T3", "T4"), labels=c("1", "2", "3", "4")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
ggplot(q1ba) + geom_line(aes(x = iteration, y= value, color= type), size=1) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter ID", breaks = c("T1", "T2", "T3", "T4"), labels=c("1", "2", "3", "4"))
ggplot(q1ba) + geom_line(aes(x = iteration, y= value, color= type), size=1) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter ID", breaks = c("T1", "T2", "T3", "T4"), labels=c("1", "2", "3", "4")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
ggplot(q1ba) + geom_line(aes(x = iteration, y= value, color= type), size=1) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter ID", breaks = c("T1", "T2", "T3", "T4"), labels=c("1", "2", "3", "4")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
gamma = c(gamma, 1)
G = matrix(c(1, 0.1, 0.3, 0.1, 0.2, 1, 0.3, 0.1, 0.2, 0.2, 1, 0.1, 0.1, 0.1, 0.1, 1), nrow = 4, byrow = T)
num_iter = 10
q1b = data.frame(T1 = numeric(num_iter),
T2 = numeric(num_iter),
T3 = numeric(num_iter),
T4 = numeric(num_iter),
SIR1 = numeric(num_iter),
SIR2 = numeric(num_iter),
SIR3 = numeric(num_iter),
SIR4 = numeric(num_iter),
iteration=1:num_iter)
for (i in 1:num_iter) {
if(i == 1) {
p2 = c(p, 0.1)
} else {
p2 = gamma / SIR * p2
}
SIR = ((diag(4) * G) %*% p2) / (((diag(4) - 1) * G) %*% p2 + noise)
q1b[i, 1:4] = p2
q1b[i, 5:8] = SIR
}
G = matrix(c(1, 0.1, 0.3, 0.2 ,1 ,0.3 , 0.2, 0.2, 1), nrow = 3, byrow = TRUE)
gamma = c(1, 1.5, 1)
noise = 1
num_iter = 10
q1a = data.frame(T1 = numeric(num_iter),
T2 = numeric(num_iter),
T3 = numeric(num_iter),
SIR1 = numeric(num_iter),
SIR2 = numeric(num_iter),
SIR3 = numeric(num_iter),
iteration=1:num_iter)
for (i in 1:num_iter) {
if(i == 1) {
p = c(0.1, 0.1, 0.1)
} else {
p = gamma / SIR * p
}
SIR = ((diag(3) * G) %*% p) / (((diag(3) - 1) * G) %*% p + noise)
q1a[i, 1:3] = p
q1a[i, 4:6] = SIR
}
q1aa = melt(q1a[c('T1', 'T2', 'T3', 'iteration')], id=c("iteration"), variable.name = "type")
q1ab = melt(q1a[c('SIR1', 'SIR2', 'SIR3', 'iteration')], id=c("iteration"), variable.name = "type")
gamma = c(gamma, 1)
G = matrix(c(1, 0.1, 0.3, 0.1, 0.2, 1, 0.3, 0.1, 0.2, 0.2, 1, 0.1, 0.1, 0.1, 0.1, 1), nrow = 4, byrow = T)
num_iter = 10
q1b = data.frame(T1 = numeric(num_iter),
T2 = numeric(num_iter),
T3 = numeric(num_iter),
T4 = numeric(num_iter),
SIR1 = numeric(num_iter),
SIR2 = numeric(num_iter),
SIR3 = numeric(num_iter),
SIR4 = numeric(num_iter),
iteration=1:num_iter)
for (i in 1:num_iter) {
if(i == 1) {
p2 = c(p, 0.1)
} else {
p2 = gamma / SIR * p2
}
SIR = ((diag(4) * G) %*% p2) / (((diag(4) - 1) * G) %*% p2 + noise)
q1b[i, 1:4] = p2
q1b[i, 5:8] = SIR
}
q1ba = melt(q1b[c('T1', 'T2', 'T3', 'T4', 'iteration')], id=c("iteration"), variable.name = "type")
q1bb = melt(q1b[c('SIR1', 'SIR2', 'SIR3', 'SIR4', 'iteration')], id=c("iteration"), variable.name = "type")
ggplot(q1ba) + geom_line(aes(x = iteration, y= value, color= type), size=1) +
xlab("Iteration") + ylab("Transmit Power (mW)") +
ggtitle("Transmit power per Iterations") +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
scale_color_discrete(name="Transmitter ID", breaks = c("T1", "T2", "T3", "T4"), labels=c("1", "2", "3", "4")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
ggplot(q1bb) + geom_line(aes(x = iteration, y= value, color = type), size = 1) +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
xlab("Iteration") + ylab("SIR Value") +
scale_color_discrete(name="Transmitter ID", breaks = c("SIR1", "SIR2", "SIR3", "SIR4"), labels=c("1", "2", "3", "4")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold")) +
ggtitle("SIR per Iterations for each Transmitter")
ggplot(q1bb) + geom_line(aes(x = iteration, y= value, color = type), size = 1) +
scale_x_continuous(breaks=seq(0, num_iter+1)) +
xlab("Iteration") + ylab("SIR Value") +
scale_color_discrete(name="Transmitter ID", breaks = c("SIR1", "SIR2", "SIR3", "SIR4"), labels=c("1", "2", "3", "4")) +
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold")) +
ggtitle("SIR per Iterations for each Transmitter")
D = matrix(c(1,0,0,0,2,0,0,0,1), nrow = 3, byrow = T)
F = matrix(c(0,0.5,0.5,0.5,0,0.5,0.5,0.5,0), nrow = 3, byrow = T)
D
F
D %*% F
D * F
solve(D %*% F)
eigen(D %*% F)
temp = D %*% F
diag(3) - temp
solve(diag(3) - temp)
t2 = temp
for(i in 1:100) {
t2 = t2 %*% t2
}
t2
eigen(temp)
diag(2) - matrix(c(4, 0, 0, 2), nrow = 2, byrow = 2) %*% matrix(c(0, 0.25, 0.25 0), nrow=2, byro)
diag(2) - matrix(c(4, 0, 0, 2), nrow = 2, byrow = T) %*% matrix(c(0, 0.25, 0.25 0), nrow=2, byrow=T)
diag(2) - matrix(c(4, 0, 0, 2), nrow = 2, byrow = T) %*% matrix(c(0, 0.25, 0.25, 0), nrow=2, byrow=T)
x <- seq(0,0.5,length=1000)
y <- seq(0,2,length=1000)
z <- expand.grid(x=x,y=y)
z <- z[conditions(z$x,z$y),]
conditions <- function(x,y) {
c1 <- (x - y >= 0.6)
c2 <- (y - x/2 >= 0.3)
return(c1 & c2)
}
z
z <- z[conditions(z$x,z$y),]
z <- expand.grid(x=x, y=y)
head(z)
x <- seq(0,2,length=1000)
y <- seq(0,2,length=1000)
z <- expand.grid(x=x, y=y)
z <- z[conditions(z$x,z$y),]
points(z, col="red")
plot(c(0, 2), c(0, 2), type='n')
points(z, col='red')
?expand.grid
expand.grid(x = c(1,2,3), y=c(4,5,6))
condition
conditions
p1 = seq(1.5, 3.5, 1000)
p2 = seq(1.5, 3.5, 1000)
z = expand.grid(x = p1, y = p2)
feasible = function(i, j) {
c1 = (i - j >= 0.6)
c2 = (j - 0.5 * i >= 0.3)
return(c1 & c2)
}
z = z[feasible(z$x, z$y),]
ggplot(z, aes(x, y)) + geom_point(aes(colour = 'red', alpha = 0.5)) +
geom_abline(intercept = 0.6, slope = 1, linetype = 2) +
geom_abline(intercept = -0.6, slope = 2, linetype = 2)
ggplot(z, aes(x, y)) + geom_point(colour = 'red', alpha = 0.5) +
geom_abline(intercept = 0.6, slope = 1, linetype = 2) +
geom_abline(intercept = -0.6, slope = 2, linetype = 2)
ggplot(z, aes(x, y)) + geom_point(colour = 'red', alpha = 0.5) +
geom_abline(intercept = 0.6, slope = 1, linetype = 2) +
geom_abline(intercept = -0.6, slope = 2, linetype = 2) +
xlim(1.5, 3.5) + ylim(1.5, 3.5)
head(z)
conditions
feasible = function(i, j) {
c1 = (i - j >= 0.6)
c2 = (j -  i / 2 >= 0.3)
return(c1 & c2)
}
p1 = seq(0, 4, 1000)
p2 = seq(0, 4, 1000)
z = expand.grid(x = p1, y = p2)
z = z[feasible(z$x, z$y),]
head(z)
conditions
feasible <- function(i, j) {
c1 <- (i - j >= 0.6)
c2 <- (j -  i / 2 >= 0.3)
return(c1 & c2)
}
z = expand.grid(x = p1, y = p2)
head(z)
z
p1 = seq(0, 4, 1000)
p1 = seq(0, 4, 1000)
p2 = seq(0, 4, 1000)
p1 = seq(0, 4, length=1000)
p2 = seq(0, 4, length=1000)
z = expand.grid(x = p1, y = p2)
z = z[feasible(z$x, z$y),]
ggplot(z, aes(x, y)) + geom_point(colour = 'red', alpha = 0.5) +
geom_abline(intercept = 0.6, slope = 1, linetype = 2) +
geom_abline(intercept = -0.6, slope = 2, linetype = 2) +
xlim(1.5, 3.5) + ylim(1.5, 3.5)
ggplot(z, aes(x, y)) + geom_point(colour = 'red', alpha = 0.5) +
geom_abline(intercept = 0.6, slope = 1, linetype = 2) +
geom_abline(intercept = -0.6, slope = 2, linetype = 2) +
xlim(0, 4) + ylim(0, 4)
p1 = seq(1, 5, length=1000)
p2 = seq(1, 5, length=1000)
z = expand.grid(x = p1, y = p2)
feasible <- function(i, j) {
c1 <- (i - j >= 0.6)
c2 <- (j -  i / 2 >= 0.3)
return(c1 & c2)
}
z = z[feasible(z$x, z$y),]
baseplot = ggplot(z, aes(x, y)) + geom_point(colour = 'red', alpha = 0.5) +
xlim(1, 5) + ylim(1, 5)
baseplot
baseplot + geom_abline(intercept = -0.6,slope = 1, linetype = 2)
summary(z)
sum(is.na(z))
game = expand.grid(p1 = c(1,2,3), p2 = c(1,2,3))
SIR = function(p1, p2) {
SIR1 = 2 * p1 / (0.5 * p2 + 0.3)
SIR2 = 2 * p2 / (0.5 * p1 + 0.3)
return(c(SIR1, SIR2))
}
sapply(game, SIR)
SIR = function(row) {
print(row)
#SIR1 = 2 * p1 / (0.5 * p2 + 0.3)
# SIR2 = 2 * p2 / (0.5 * p1 + 0.3)
#return(c(SIR1, SIR2))
}
sapply(game, SIR)
SIR = function(row) {
print(row[1])
#SIR1 = 2 * p1 / (0.5 * p2 + 0.3)
# SIR2 = 2 * p2 / (0.5 * p1 + 0.3)
#return(c(SIR1, SIR2))
}
game = expand.grid(p1 = c(1,2,3), p2 = c(1,2,3))
sapply(game, SIR)
SIR = function(row) {
print(length(row))
#SIR1 = 2 * p1 / (0.5 * p2 + 0.3)
# SIR2 = 2 * p2 / (0.5 * p1 + 0.3)
#return(c(SIR1, SIR2))
}
game = expand.grid(p1 = c(1,2,3), p2 = c(1,2,3))
sapply(game, SIR)
SIR = function(row) {
p1 = row[1]
p2 = row[2]
SIR1 = 2 * p1 / (0.5 * p2 + 0.3)
SIR2 = 2 * p2 / (0.5 * p1 + 0.3)
return(c(SIR1, SIR2))
}
game = expand.grid(p1 = c(1,2,3), p2 = c(1,2,3))
sapply(game, SIR)
game
typeof(game)
clas
class(game)
head(game)
game
apply(game, SIR)
apply(game, 1, SIR)
lapply(game, 1, SIR)
lapply(game, SIR)
dapply(game, SIR)
apply(game, 1, SIR)
apply(game, 0, SIR)
apply(game, 1, SIR)
class(apply(game, 1, SIR))
SIR([1, 1])
SIR(c(1, 1))
SIR(c(2, 1))
SIR(c(5, 1))
SIR(c(2, 2))
SIR(c(2, 3))
SIR(c(1, 3))
SIR(c(2,1))
